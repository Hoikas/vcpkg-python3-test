name: CI
on: [push, pull_request]

defaults:
  run:
    shell: pwsh

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
        cmake-defines: ["-DOLD_FINDERS=ON", "-DNEW_FINDERS=ON", "-DNEW_FINDERS=ON -DOLD_FINDERS=ON"]
        build-type: ["Debug", "Release"]

        include:
          - triplet: x86-windows-static-md
            os: windows-latest
            cmake-defines: -DNEW_FINDERS=ON -DOLD_FINDERS=ON
          - triplet: x64-windows
            os: windows-latest
            cmake-defines: -DNEW_FINDERS=ON -DOLD_FINDERS=ON
          - triplet: x64-windows-static-md
            os: windows-latest
            cmake-defines: -DNEW_FINDERS=ON -DOLD_FINDERS=ON

    env:
      VCPKG_FEATURE_FLAGS: binarycaching,manifests
      VCPKG_ROOT: ${{ github.workspace }}/vcpkg
      VCPKG_BINARY_SOURCES: clear;files,${{ github.workspace }}/deps,readwrite

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Windoze
        if: runner.os == 'windows'
        run: |
          Write-Host "::set-env name=CMAKE_GENERATOR::Visual Studio 16 2019"
          if ("${{ matrix.triplet }}".StartsWith("x64")) {
            Write-Host "::set-env name=CMAKE_GENERATOR_PLATFORM::x64"
          } else {
            Write-Host "::set-env name=CMAKE_GENERATOR_PLATFORM::Win32"
          }
          Write-Host "::set-env name=VCPKG_DEFAULT_TRIPLET::${{ matrix.triplet }}"

      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ github.workspace }}/deps
          key: |
            ${{ runner.os }} ${{ matrix.triplet }} ${{ github.sha }}
          restore-keys: |
            ${{ runner.os }} ${{ matrix.triplet }}

      - name: Build
        run: |
          mkdir build && cd build
          if ("${{ runner.os }}" -Eq "Windows") {
            cmake -DVCPKG_MANIFEST_MODE=ON ${{ matrix.cmake-defines }} ..
            cmake --build . --config ${{ matrix.build-type }}
          } else {
            cmake -DCMAKE_BUILD_TYPE=${{ matrix.build-type }} -DVCPKG_MANIFEST_MODE=ON ${{ matrix.cmake-defines }} ..
            cmake --build .
          }

      - name: Upload Failure Logs
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ runner.os }} ${{ matrix.build-type }} ${{ matrix.cmake-defines }} ${{ matrix.triplet }}
          path: ${{ github.workspace }}/**/*.log
